1. 수 자료형
 1) 정수형 Integer
 -양의 정수
 -음의 정수
 -0
 
 2) 실수형
 - 소수점 아래의 데이터를 포함
 - 소수점을 붙인 수
 - if 소수부가 0 or 정수부가 0 : 0 생략 가능
 ex) a = 5.
     b = .7
 - e, E 이용 -> 1e9 : 10의 9제곱(1,000,000,000)
 
 - 최단 경로 문제에서는 도달할 수 없는 노드에 대하여 최단 거리를 무한(INF)로 설정
  . 최단 경로로 가능한 최댓값이 10억 미만이라면 무한을 표현할 때 10억을 사용 
  . 혹은 987,654,321
 
 - 부동소수점 방식을 이용하기 때문에 소수점 값을 비교하는 작업이 필요한 문제라면 round() 함수를 이용
 
 3) 수 자료형의 연산
  - +,-,x,/,//,**(거듭제곱)
  
 4) 리스트 자료형
  - 배열 기능 포함
  - 내부적으로 연결 리스트 자료구조 : append(), remove() 메서트 지원
  - 대괄호[] 안에 넣어 초기화, 쉼표로 원소 구분
  - 인덱스 시작 : 0
  - 비어있는 리스트 선언 : list() or []
  
  # 크기가 N이고, 모든 값인 0인 1차원 리스트 초기화
  
    N =10
    a = [0] * N
  
  - 리스트의 인덱싱, 슬라이싱
   . 인덱싱 : 인덱스로 리스트의 특정한 원소에 접근
    - 음의 정수 -> 원소를 거꾸로 탐색
   . 슬라이싱 : 연속적인 위치의 원소들 가져옴
   
  - 리스트 컴프리헨션
   . 한 줄의 소스코드로 리스트 초기화하는 방법
   # 0부터 19까지의 수 중에서 홀수만 포함하는 리스트
   array = [ i for in range(20) if i % 2 == 1]
   
   # N x M 크기의 2차원 리스트 초기화(특정 크기의 2차원 리스트를 초기화할 때는 반드시 리스트 컴프리헨션 사용)
    n = 3
    m = 4
    array = [[0] & m for _ in range(n)]  # _(언더바)는 반복을 수행하되 반복을 위한 변수의 값을 무시하고자 할 때 사용
    
  - 리스트 관련 기타 메서드
   . insert(), remove()
    - 원소의 개수가 N개면, 시간 복잡도는 O(N)
    - append() 는 O(1) 인데 반해 insert()는 동작이 느리다. -> 중간에 원소를 삽입한 뒤에, 리스트의 원소 위치를 조정해줘야 하기 때문 -> 남발 금지
    - remove()도 마찬가지로 O(N) -> 리스트에서 중간에 있는 원소를 삭제한 뒤에, 리스트의 원소 위치를 조정해주어야 하기 때문
    ex)
    # remove_all()이 없는 파이썬에서 리스트 원소 값 제거법
    a = [1,2,3,4,5,5,5]
    remove_set = {3,5}
    
    # remove_set에 포함되지 않은 값만을 저장
    result = [i for i in a if i not in remove_set]


2. 문자열 자료형
 - " 안에 ',혹은 반대 
 - 문자열은 여러 개의 문자가 합쳐진 리스트 -> 인덱싱, 슬라이싱 가능
 
 1) 튜플 자료형
  - 튜플은 한 번 선언된 값을 변경할 수 없다
  - 리스트는 대괄호[]를 사용하지만, 튜플은 ()소괄호를 이용
  - 그래프 알고리즘 구현에 자주 사용
    ex) 다익스트라 최단 경로 알고리즘처럼 최단 경로를 찾아주즌 알고리즘의 내부에서는 우선순위 큐를 이용하는데 해당 알고리즘에서 우선수위 큐에 한 번 들어간 값은 변경되지 않는다.
        그래서 그 우선순위 큐에 들어가는 데이터를 튜플로 구성하여 작성
  - 리스트에 비해 공간 효율적
  - 각 원소의 성질이 다를 때 주로 사용
    ex) 다익스트라 최단 경로 알고리즘에서는 '비용', '노드', '번호' 라는 서로 다른 성질의 데이터를 (비용, 노드 번호) 의 형태로 튜플로 만들어 관리
    
3. 사전 자료형
  - key, value 쌍을 데이터로 가짐
  - 내부적으로 Hash Table 을 이용 -> 데이터의 검색 및 수정을 O(1)의 시간에 처리
  
  ** 파이썬에서 리스트, 문자열, 튜플 등 순차적인 정보를 담는 자료형을 iterable 자료형이라고 한다. in 문법은 iterable 자료형에 모두 사용 가능하다
    
4. 집합 자료형
  - 중복 허용 x
  - 순서 x
  - 사전 자료형, 집합 자료형은 순서가 없기 때문에 인덱싱 불가
  - 원소 검사 : O(1)
  - 학생 번호가 주어졌을 때 해당 학생이 선택되었는지 여부를 출력하는 문제
  - 특정한 데이터가 이미 등장한 적이 있는지 여부
  - 초기화 : set(), {} 안에 원소,원소,...
  - 집합 자료형의 연상
    . 합집합 : |
    . 교집합 : &
    . 차집합 : -
  - 관련 함수
    .update() : 여러 개의 값을 한꺼번에 추가
    .remove() : 특정한 값 제거,  O(1)
    .add() : O(1)
    
   
   
   
   
   
 
